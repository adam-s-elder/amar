"Bonferroni corrected linear regression",
"Adaptive Lp (Parametric Bootstrap)",
"Adaptive Lp (Permutation)",
"Adaptive Ssq (Parametric Bootstrap)",
"Adaptive Ssq (Permutation)",
"Zhang and Laber")
names(norm.labs) <- c("bonf", "simp", "lp", "lp_perm",
"ssq", "ssq_perm", "ZL")
res_tab$nrm_typ <- factor(res_tab$nrm_typ,
levels = names(norm.labs))
ss_labs <- as.character(unique(res_tab$samp_size))
ss.labs <- paste0("n = ", ss_labs)
names(ss.labs) <- ss_labs
xcor_lab <- as.character(unique(res_tab$xcor))
xcor.labs <- paste0("xxcor = ", xcor_lab)
names(xcor.labs) <- xcor_lab
make_plot <- function(xxcor, null_mod) {
if (null_mod) {
mods <- 1
}else{
mods <- setdiff(unique(res_tab$model), 1)
}
new_plot <- ggplot(res_tab %>% filter(xcor == xxcor, model %in% mods),
aes(x = as.factor(dim),
y = rej_rate, col = nrm_typ)) +
geom_abline(intercept = c(0.25, 0.5, 0.75, 1),
slope = 0, col = "gray",
lty = 1, lwd = 0.25) +
geom_point(position =  position_dodge(width = 0.75), size = 0.31)  +
geom_pointrange(aes(ymin = lb, ymax = ub), size = 0.31,
position =  position_dodge(width = 0.75)) +
facet_grid(samp_size ~ model,
labeller = labeller(model = mod.labs,
samp_size = ss.labs,
xcor = xcor.labs)) +
theme_half_open(12) + panel_border() +
theme(text = element_text(size = 20)) +
geom_abline(intercept = 0.05, slope = 0, col = "red", lty = 3) +
xlab("Dimension") +  ylab("Rejection Rate") +
labs(color = "Norm Type") +
theme_minimal() +
theme(axis.title = element_text(face = "bold", family = "Helvetica",
size = rel(1)),
plot.title = element_text(face = "bold", family = "Helvetica",
size = rel(1.2), hjust = 0.5),
strip.text = element_text(face = "bold", family = "Helvetica",
size = rel(1.2)),
axis.line = element_line(size = 0.25, colour = "black"),
legend.position = "bottom") +
scale_color_manual(values = my_cols,
labels = norm.labs)
if (null_mod) {
return(new_plot +
theme(legend.position = "none",
strip.text.y = element_blank())
)
}else{
return(new_plot + ylim(c(0, 1)) +
theme(axis.title.y = element_blank()))
}
}
fin_plot <- function(btw_x_cor){
pnull_n_cor <- make_plot(xxcor = btw_x_cor, null_mod = TRUE)
palt_n_cor <- make_plot(xxcor = btw_x_cor, null_mod = FALSE)
p_ledge <- get_legend(palt_n_cor +
guides(color = guide_legend(nrow = 2)) +
theme(legend.position = "bottom"))
no_ledge_plot <- plot_grid(
pnull_n_cor,
palt_n_cor + theme(legend.position = "none"),
labels = c("", ""),
rel_widths = c(1, 2.1))
new_plot <- plot_grid(
no_ledge_plot, p_ledge, ncol = 1, rel_heights = c(1, .1)
)
return(new_plot)
}
none_cor_plot <- fin_plot(0)
some_cor_plot <- fin_plot(0.5)
none_cor_plot
wesanderson::wes_palette("Darjeeling1", 7, "continuous")
wesanderson::wes_palette("Darjeeling1", 20, "continuous")
my_cols <- wesanderson::wes_palette(
"Darjeeling1", 20, "continuous"
)[c(1, 2, 6, 7, 11, 14, 20)]
mod.labs <- c("Setting One", "Setting Two",
"Setting Three")
names(mod.labs) <- c("1", "2", "3")
norm.labs <- c("Within method Bonferroni",
"Bonferroni corrected linear regression",
"Adaptive Lp (Parametric Bootstrap)",
"Adaptive Lp (Permutation)",
"Adaptive Ssq (Parametric Bootstrap)",
"Adaptive Ssq (Permutation)",
"Zhang and Laber")
names(norm.labs) <- c("bonf", "simp", "lp", "lp_perm",
"ssq", "ssq_perm", "ZL")
res_tab$nrm_typ <- factor(res_tab$nrm_typ,
levels = names(norm.labs))
ss_labs <- as.character(unique(res_tab$samp_size))
ss.labs <- paste0("n = ", ss_labs)
names(ss.labs) <- ss_labs
xcor_lab <- as.character(unique(res_tab$xcor))
xcor.labs <- paste0("xxcor = ", xcor_lab)
names(xcor.labs) <- xcor_lab
make_plot <- function(xxcor, null_mod) {
if (null_mod) {
mods <- 1
}else{
mods <- setdiff(unique(res_tab$model), 1)
}
new_plot <- ggplot(res_tab %>% filter(xcor == xxcor, model %in% mods),
aes(x = as.factor(dim),
y = rej_rate, col = nrm_typ)) +
geom_abline(intercept = c(0.25, 0.5, 0.75, 1),
slope = 0, col = "gray",
lty = 1, lwd = 0.25) +
geom_point(position =  position_dodge(width = 0.75), size = 0.31)  +
geom_pointrange(aes(ymin = lb, ymax = ub), size = 0.31,
position =  position_dodge(width = 0.75)) +
facet_grid(samp_size ~ model,
labeller = labeller(model = mod.labs,
samp_size = ss.labs,
xcor = xcor.labs)) +
theme_half_open(12) + panel_border() +
theme(text = element_text(size = 20)) +
geom_abline(intercept = 0.05, slope = 0, col = "red", lty = 3) +
xlab("Dimension") +  ylab("Rejection Rate") +
labs(color = "Norm Type") +
theme_minimal() +
theme(axis.title = element_text(face = "bold", family = "Helvetica",
size = rel(1)),
plot.title = element_text(face = "bold", family = "Helvetica",
size = rel(1.2), hjust = 0.5),
strip.text = element_text(face = "bold", family = "Helvetica",
size = rel(1.2)),
axis.line = element_line(size = 0.25, colour = "black"),
legend.position = "bottom") +
scale_color_manual(values = my_cols,
labels = norm.labs)
if (null_mod) {
return(new_plot +
theme(legend.position = "none",
strip.text.y = element_blank())
)
}else{
return(new_plot + ylim(c(0, 1)) +
theme(axis.title.y = element_blank()))
}
}
fin_plot <- function(btw_x_cor){
pnull_n_cor <- make_plot(xxcor = btw_x_cor, null_mod = TRUE)
palt_n_cor <- make_plot(xxcor = btw_x_cor, null_mod = FALSE)
p_ledge <- get_legend(palt_n_cor +
guides(color = guide_legend(nrow = 2)) +
theme(legend.position = "bottom"))
no_ledge_plot <- plot_grid(
pnull_n_cor,
palt_n_cor + theme(legend.position = "none"),
labels = c("", ""),
rel_widths = c(1, 2.1))
new_plot <- plot_grid(
no_ledge_plot, p_ledge, ncol = 1, rel_heights = c(1, .1)
)
return(new_plot)
}
none_cor_plot <- fin_plot(0)
none_cor_plot
my_cols <- wesanderson::wes_palette(
"Darjeeling1", 20, "continuous"
)[c(1, 2, 5, 8, 11, 14, 20)]
none_cor_plot <- fin_plot(0)
none_cor_plot
make_plot <- function(xxcor, null_mod) {
if (null_mod) {
mods <- 1
}else{
mods <- setdiff(unique(res_tab$model), 1)
}
new_plot <- ggplot(res_tab %>% filter(xcor == xxcor, model %in% mods),
aes(x = as.factor(dim),
y = rej_rate, col = nrm_typ)) +
geom_abline(intercept = c(0.25, 0.5, 0.75, 1),
slope = 0, col = "gray",
lty = 1, lwd = 0.25) +
geom_abline(intercept = 0.05, slope = 0, col = "red", lty = 3) +
geom_point(position =  position_dodge(width = 0.75), size = 0.31)  +
geom_pointrange(aes(ymin = lb, ymax = ub), size = 0.31,
position =  position_dodge(width = 0.75)) +
facet_grid(samp_size ~ model,
labeller = labeller(model = mod.labs,
samp_size = ss.labs,
xcor = xcor.labs)) +
theme_half_open(12) + panel_border() +
theme(text = element_text(size = 20)) +
xlab("Dimension") +  ylab("Rejection Rate") +
labs(color = "Norm Type") +
theme_minimal() +
theme(axis.title = element_text(face = "bold", family = "Helvetica",
size = rel(1)),
plot.title = element_text(face = "bold", family = "Helvetica",
size = rel(1.2), hjust = 0.5),
strip.text = element_text(face = "bold", family = "Helvetica",
size = rel(1.2)),
axis.line = element_line(size = 0.25, colour = "black"),
legend.position = "bottom") +
scale_color_manual(values = my_cols,
labels = norm.labs)
if (null_mod) {
return(new_plot +
theme(legend.position = "none",
strip.text.y = element_blank())
)
}else{
return(new_plot + ylim(c(0, 1)) +
theme(axis.title.y = element_blank()))
}
}
none_cor_plot <- fin_plot(0)
none_cor_plot <- fin_plot(0)
none_cor_plot
my_cols <- wesanderson::wes_palette(
"Darjeeling1", 20, "continuous"
)[c(1, 2, 5, 8, 14, 11, 20)]
mod.labs <- c("Setting One", "Setting Two",
"Setting Three")
names(mod.labs) <- c("1", "2", "3")
norm.labs <- c("Within method Bonferroni",
"Bonferroni corrected linear regression",
"Adaptive Lp (Parametric Bootstrap)",
"Adaptive Lp (Permutation)",
"Adaptive Ssq (Parametric Bootstrap)",
"Adaptive Ssq (Permutation)",
"Zhang and Laber")
names(norm.labs) <- c("bonf", "simp", "lp", "lp_perm",
"ssq", "ssq_perm", "ZL")
res_tab$nrm_typ <- factor(res_tab$nrm_typ,
levels = names(norm.labs))
ss_labs <- as.character(unique(res_tab$samp_size))
ss.labs <- paste0("n = ", ss_labs)
names(ss.labs) <- ss_labs
xcor_lab <- as.character(unique(res_tab$xcor))
xcor.labs <- paste0("xxcor = ", xcor_lab)
names(xcor.labs) <- xcor_lab
make_plot <- function(xxcor, null_mod) {
if (null_mod) {
mods <- 1
}else{
mods <- setdiff(unique(res_tab$model), 1)
}
new_plot <- ggplot(res_tab %>% filter(xcor == xxcor, model %in% mods),
aes(x = as.factor(dim),
y = rej_rate, col = nrm_typ)) +
geom_abline(intercept = c(0.25, 0.5, 0.75, 1),
slope = 0, col = "gray",
lty = 1, lwd = 0.25) +
geom_abline(intercept = 0.05, slope = 0, col = "red", lty = 3) +
geom_point(position =  position_dodge(width = 0.75), size = 0.31)  +
geom_pointrange(aes(ymin = lb, ymax = ub), size = 0.31,
position =  position_dodge(width = 0.75)) +
facet_grid(samp_size ~ model,
labeller = labeller(model = mod.labs,
samp_size = ss.labs,
xcor = xcor.labs)) +
theme_half_open(12) + panel_border() +
theme(text = element_text(size = 20)) +
xlab("Dimension") +  ylab("Rejection Rate") +
labs(color = "Norm Type") +
theme_minimal() +
theme(axis.title = element_text(face = "bold", family = "Helvetica",
size = rel(1)),
plot.title = element_text(face = "bold", family = "Helvetica",
size = rel(1.2), hjust = 0.5),
strip.text = element_text(face = "bold", family = "Helvetica",
size = rel(1.2)),
axis.line = element_line(size = 0.25, colour = "black"),
legend.position = "bottom") +
scale_color_manual(values = my_cols,
labels = norm.labs)
if (null_mod) {
return(new_plot +
theme(legend.position = "none",
strip.text.y = element_blank())
)
}else{
return(new_plot + ylim(c(0, 1)) +
theme(axis.title.y = element_blank()))
}
}
fin_plot <- function(btw_x_cor){
pnull_n_cor <- make_plot(xxcor = btw_x_cor, null_mod = TRUE)
palt_n_cor <- make_plot(xxcor = btw_x_cor, null_mod = FALSE)
p_ledge <- get_legend(palt_n_cor +
guides(color = guide_legend(nrow = 2)) +
theme(legend.position = "bottom"))
no_ledge_plot <- plot_grid(
pnull_n_cor,
palt_n_cor + theme(legend.position = "none"),
labels = c("", ""),
rel_widths = c(1, 2.1))
new_plot <- plot_grid(
no_ledge_plot, p_ledge, ncol = 1, rel_heights = c(1, .1)
)
return(new_plot)
}
none_cor_plot <- fin_plot(0)
some_cor_plot <- fin_plot(0.5)
some_cor_plot
much_cor_plot <- fin_plot(0.8)
ggsave("none_cor_plot.pdf",
none_cor_plot,
width = 10, height = 6)
ggsave("some_cor_plot.pdf",
some_cor_plot,
width = 10, height = 6)
ggsave("much_cor_plot.pdf",
much_cor_plot,
width = 10, height = 6)
time_tab <- res_tab %>% group_by(samp_size, dim, nrm_typ) %>%
summarise("num_obs" = n(),
"l_time" = mean(log_mean_time),
"lb_time" = log(mean(time_seconds) -
2 * mean(time_sd) / sqrt(3)),
"ub_time" = log(mean(time_seconds) +
2 * mean(time_sd) / sqrt(3)),
)
make_plot <- function(xxcor, null_mod) {
if (null_mod) {
mods <- 1
}else{
mods <- setdiff(unique(res_tab$model), 1)
}
new_plot <- ggplot(res_tab %>% filter(xcor == xxcor, model %in% mods),
aes(x = as.factor(dim),
y = rej_rate, col = nrm_typ)) +
geom_abline(intercept = c(0.25, 0.5, 0.75, 1),
slope = 0, col = "gray",
lty = 1, lwd = 0.25) +
geom_abline(intercept = 0.05, slope = 0, col = "red", lty = 3) +
geom_point(position =  position_dodge(width = 0.75), size = 0.31)  +
geom_pointrange(aes(ymin = lb, ymax = ub), size = 0.31,
position =  position_dodge(width = 0.75)) +
facet_grid(samp_size ~ model,
labeller = labeller(model = mod.labs,
samp_size = ss.labs,
xcor = xcor.labs)) +
theme_half_open(12) + panel_border() +
theme(text = element_text(size = 20)) +
xlab("Dimension") +  ylab("Rejection Rate") +
labs(color = "Testing \n Procedure") +
theme_minimal() +
theme(axis.title = element_text(face = "bold", family = "Helvetica",
size = rel(1)),
plot.title = element_text(face = "bold", family = "Helvetica",
size = rel(1.2), hjust = 0.5),
strip.text = element_text(face = "bold", family = "Helvetica",
size = rel(1.2)),
axis.line = element_line(size = 0.25, colour = "black"),
legend.position = "bottom") +
scale_color_manual(values = my_cols,
labels = norm.labs)
if (null_mod) {
return(new_plot +
theme(legend.position = "none",
strip.text.y = element_blank())
)
}else{
return(new_plot + ylim(c(0, 1)) +
theme(axis.title.y = element_blank()))
}
}
fin_plot <- function(btw_x_cor){
pnull_n_cor <- make_plot(xxcor = btw_x_cor, null_mod = TRUE)
palt_n_cor <- make_plot(xxcor = btw_x_cor, null_mod = FALSE)
p_ledge <- get_legend(palt_n_cor +
guides(color = guide_legend(nrow = 2)) +
theme(legend.position = "bottom"))
no_ledge_plot <- plot_grid(
pnull_n_cor,
palt_n_cor + theme(legend.position = "none"),
labels = c("", ""),
rel_widths = c(1, 2.1))
new_plot <- plot_grid(
no_ledge_plot, p_ledge, ncol = 1, rel_heights = c(1, .1)
)
return(new_plot)
}
none_cor_plot <- fin_plot(0)
some_cor_plot <- fin_plot(0.5)
much_cor_plot <- fin_plot(0.8)
some_cor_plot
wesanderson::wes_palette(
"Darjeeling1", 20, "continuous"
)
wesanderson::wes_palette(
"Darjeeling1", 20, "continuous"
)[c(1, 2, 5, 8, 14, 11, 20)]
library(ggplot2)
library(cowplot)
theme_set(theme_cowplot())
my_cols <- wesanderson::wes_palette(
"Darjeeling1", 20, "continuous"
)[c(1, 2, 5, 8, 16, 11, 20)]
mod.labs <- c("Setting One", "Setting Two",
"Setting Three")
names(mod.labs) <- c("1", "2", "3")
norm.labs <- c("Within method Bonferroni",
"Bonferroni corrected linear regression",
"Adaptive Lp (Parametric Bootstrap)",
"Adaptive Lp (Permutation)",
"Adaptive Ssq (Parametric Bootstrap)",
"Adaptive Ssq (Permutation)",
"Zhang and Laber")
names(norm.labs) <- c("bonf", "simp", "lp", "lp_perm",
"ssq", "ssq_perm", "ZL")
res_tab$nrm_typ <- factor(res_tab$nrm_typ,
levels = names(norm.labs))
ss_labs <- as.character(unique(res_tab$samp_size))
ss.labs <- paste0("n = ", ss_labs)
names(ss.labs) <- ss_labs
xcor_lab <- as.character(unique(res_tab$xcor))
xcor.labs <- paste0("xxcor = ", xcor_lab)
names(xcor.labs) <- xcor_lab
make_plot <- function(xxcor, null_mod) {
if (null_mod) {
mods <- 1
}else{
mods <- setdiff(unique(res_tab$model), 1)
}
new_plot <- ggplot(res_tab %>% filter(xcor == xxcor, model %in% mods),
aes(x = as.factor(dim),
y = rej_rate, col = nrm_typ)) +
geom_abline(intercept = c(0.25, 0.5, 0.75, 1),
slope = 0, col = "gray",
lty = 1, lwd = 0.25) +
geom_abline(intercept = 0.05, slope = 0, col = "red", lty = 3) +
geom_point(position =  position_dodge(width = 0.75), size = 0.31)  +
geom_pointrange(aes(ymin = lb, ymax = ub), size = 0.31,
position =  position_dodge(width = 0.75)) +
facet_grid(samp_size ~ model,
labeller = labeller(model = mod.labs,
samp_size = ss.labs,
xcor = xcor.labs)) +
theme_half_open(12) + panel_border() +
theme(text = element_text(size = 20)) +
xlab("Dimension") +  ylab("Rejection Rate") +
labs(color = "Testing \n Procedure") +
theme_minimal() +
theme(axis.title = element_text(face = "bold", family = "Helvetica",
size = rel(1)),
plot.title = element_text(face = "bold", family = "Helvetica",
size = rel(1.2), hjust = 0.5),
strip.text = element_text(face = "bold", family = "Helvetica",
size = rel(1.2)),
axis.line = element_line(size = 0.25, colour = "black"),
legend.position = "bottom") +
scale_color_manual(values = my_cols,
labels = norm.labs)
if (null_mod) {
return(new_plot +
theme(legend.position = "none",
strip.text.y = element_blank())
)
}else{
return(new_plot + ylim(c(0, 1)) +
theme(axis.title.y = element_blank()))
}
}
fin_plot <- function(btw_x_cor){
pnull_n_cor <- make_plot(xxcor = btw_x_cor, null_mod = TRUE)
palt_n_cor <- make_plot(xxcor = btw_x_cor, null_mod = FALSE)
p_ledge <- get_legend(palt_n_cor +
guides(color = guide_legend(nrow = 2)) +
theme(legend.position = "bottom"))
no_ledge_plot <- plot_grid(
pnull_n_cor,
palt_n_cor + theme(legend.position = "none"),
labels = c("", ""),
rel_widths = c(1, 2.1))
new_plot <- plot_grid(
no_ledge_plot, p_ledge, ncol = 1, rel_heights = c(1, .1)
)
return(new_plot)
}
none_cor_plot <- fin_plot(0)
some_cor_plot <- fin_plot(0.5)
some_cor_plot
much_cor_plot <- fin_plot(0.8)
ggsave("none_cor_plot.pdf",
none_cor_plot,
width = 10, height = 6)
ggsave("some_cor_plot.pdf",
some_cor_plot,
width = 10, height = 6)
ggsave("much_cor_plot.pdf",
much_cor_plot,
width = 10, height = 6)
time_tab <- res_tab %>% group_by(samp_size, dim, nrm_typ) %>%
summarise("num_obs" = n(),
"l_time" = mean(log_mean_time),
"lb_time" = log(mean(time_seconds) -
2 * mean(time_sd) / sqrt(3)),
"ub_time" = log(mean(time_seconds) +
2 * mean(time_sd) / sqrt(3)),
)
ggsave("some_cor_plot.pdf",
some_cor_plot,
width = 10, height = 6)
?binconf
??binconf
Hmisc::binconf(80, 1000)
setwd("~/Dropbox/Adam_Project/amar/R")
